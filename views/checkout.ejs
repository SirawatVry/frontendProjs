<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
</head>
<body class="bg-gray-100">
    <main class="container mx-auto px-4 py-8">
        <h1 class="text-3xl font-bold mb-4">Checkout</h1>
        <div id="checkout-items" class="mb-4">
            <% if (cart && cart.length > 0) { %>
                <% cart.forEach(item => { %>
                    <div class="p-4 bg-white shadow-md rounded mb-2 flex justify-between items-center">
                        <div>
                            <h3><%= item.Product.Product_Name %> - <%= item.OrderDetail_Quantity %> pcs</h3>
                            <p>Price: <%= item.Product.Product_Price %> ฿</p>
                            <p>Total: <%= item.OrderDetail_Total_Price %> ฿</p>
                        </div>
                        <div class="flex items-center">
                            <button onclick="decreaseQuantity(<%= item.Product.Product_ID %>)" class="bg-yellow-500 text-white px-2 py-1 rounded">-</button>
                            <button onclick="increaseQuantity(<%= item.Product.Product_ID %>)" class="bg-green-500 text-white px-2 py-1 rounded">+</button>
                            <button onclick="removeItem(<%= item.Product.Product_ID %>)" class="bg-red-500 text-white px-2 py-1 rounded ml-2">Remove</button>
                        </div>
                    </div>
                <% }); %>
            <% } else { %>
                <p>No items in the cart.</p>
            <% } %>
        </div>
        <div class="font-bold" id="total-price">Total Price: <%= total %> ฿</div>
        <button class="bg-green-500 text-white px-6 py-3 rounded mt-4" id="confirm-order">Confirm Order</button>
    </main>

    <script>
        async function removeItem(orderDetailId) {
            await fetch("/cart/remove", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ customerId: 1, productId: orderDetailId }) // เปลี่ยนเป็น ID ของลูกค้าที่ถูกต้อง
            });
            location.reload(); // รีเฟรชหน้าเพื่ออัปเดตข้อมูล
        }

        async function decreaseQuantity(orderDetailId) {
    await fetch("/cart/update", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ customerId: 1, productId: orderDetailId, change: -1 }) // ใช้ orderDetailId หรือ productId ตามที่ API ต้องการ
    });
    location.reload(); // รีเฟรชหน้าเพื่ออัปเดตข้อมูล
}

async function increaseQuantity(orderDetailId) {
    await fetch("/cart/update", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ customerId: 1, productId: orderDetailId, change: +1 }) // ใช้ orderDetailId หรือ productId ตามที่ API ต้องการ
    });
    location.reload(); // รีเฟรชหน้าเพื่ออัปเดตข้อมูล
}

        document.getElementById("confirm-order").addEventListener("click", async () => {
            // ทำการชำระเงินที่นี่ (เช่น บันทึกการชำระเงินในฐานข้อมูล)
            alert("Order confirmed! Thank you for your purchase.");
            // รีเซ็ตตระกร้า
            await fetch("/cart/reset", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ customerId: 1 }) // เปลี่ยนให้เป็น ID ของลูกค้าที่ถูกต้อง
            });
            // Redirect to home or menu page
            window.location.href = "/"; // เปลี่ยนไปยังหน้าเมนู
        });
    </script>
</body>
</html>